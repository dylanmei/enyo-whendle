(function() {  var app = {    name: "App",    kind: "VFlexBox",    components: [      { kind: 'ApplicationEvents', onWindowParamsChange: 'on_window_params' },      { kind: enyo.AppMenu, components: [        { caption: 'About', onclick: 'on_show_about' }      ]},      { kind: 'SlippyMap', name: 'map' },      { kind: 'App.Scroller', name: 'scroller', components: [        { kind: 'App.Alarms', name: 'alarms' }      ]},      { kind: 'App.AboutDialog', name: 'about' },      { kind: 'Spinner', name: 'spinner', className: 'spinner' }    ],    create: function() {      this.inherited(arguments);      _.observe('alarms:list', _.bind(on_load_alarms, this));      _.observe('alarms:save', _.bind(on_save_alarm, this));      _.observe('alarms:delete', _.bind(on_delete_alarm, this));      _.observe('clock:tick', _.bind(on_clock_tick, this));      enyo.keyboard.setResizesWindow(false);      enyo.setAllowedOrientation("landscape");      _.delay(Timekeeping.check, (5).seconds);    },    rendered: function() {      this.inherited(arguments);            this.start_spinning(true);      _.defer(Timekeeping.tick);      var node = this.hasNode(),          latitude = 30, longitude = 0;      this.$.map        .zoom(2)        .pan(latitude, longitude)        .size(node.offsetWidth, node.offsetHeight);    },    on_show_about: function() {      if (this.interactive)        this.$.about.open();    },    on_window_params: function() {    },    resizeHandler: function() {      var node = this.hasNode();      this.$.map.size(node.offsetWidth, node.offsetHeight);    },    start_spinning: function(show_scrim) {      if (show_scrim) enyo.scrim.show();      this.$.spinner.show();    },    stop_spinning: function(hide_scrim) {      if (hide_scrim) enyo.scrim.hide();      this.$.spinner.hide();    }  };  function on_clock_tick(e) {    if (e.declination === undefined) return;    this.$.map.time(e.now, e.declination);    if (!this.interactive) {      this.interactive = true;      this.stop_spinning(true);    }  }  function on_load_alarms(e) {    Timekeeping.list()      .success(function(response) {        if (e.success) e.success(response.results);      })      .complete(function() {        if (e.complete) e.complete();      });  }  function on_save_alarm(e) {    var self = this;    var alarm = e.alarm;        self.start_spinning();    if (alarm.id) {      Timekeeping.edit(alarm)        .complete(function() {          if (e.complete) e.complete();          self.stop_spinning();        });    }    else {      Timekeeping.new(alarm)        .success(function(response) {        })        .failure(function(response) {        })        .complete(function() {          if (e.complete) e.complete();          self.stop_spinning();        });    }  }  function on_delete_alarm(e) {    var self = this;    self.start_spinning();    Timekeeping.delete({id: e.id})      .complete(function() {        if (e.complete) e.complete();        self.stop_spinning();      });  }  enyo.kind(app);})();