Loop = (function() {  function Loop(src) {    this.audio = new Audio(src);    this.endedHandler = _.bind(this.soundEnding, this);  }  _.extend(Loop.prototype, {    play: function() {      this.start = ticks();      if (this.duration)        delete this.duration;            this.audio.play();      this.audio.addEventListener(        'ended', this.endedHandler, false);    },    soundEnding: function() {      if (this.endedHandler) {        if (!this.duration)          this.duration = ticks() - this.start;                this.duration < (30).seconds          ? this.audio.currentTime = 0          : _.delay(_.bind(this.reload, this), (1).seconds);      }    },    reload: function() {      if (this.endedHandler) {        this.audio.load();        this.audio.play();      }    },    stop: function() {      this.audio.pause();      if (this.endedHandler)        this.audio.removeEventListener('ended', this.endedHandler);      delete this.endedHandler;    }  });  function ticks() {    return (new Date()).getTime();  }  return Loop;})();