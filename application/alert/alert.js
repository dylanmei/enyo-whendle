(function() {  var NameTemplate = _.template('#{name}');  var TextTemplate = _.template('Pressing snooze will give you #{snooze} more minutes.');  var DismissTemplate = _.template("Dismissed '#{name}' alarm.");  var alarm = {    name: 'Alert',    kind: enyo.Control,    components: [      { kind: 'ApplicationEvents', onUnload: 'closing' },      { className: 'container', kind: "HFlexBox", components:[        { kind: 'VFlexBox', flex: 1, components: [          { name: 'name', className: 'name', content: '' },          { name: 'text', className: 'text', content: '' }        ]},        { className: 'icon' }      ]},      { kind: 'Button', caption: 'Snooze', className: 'snooze', onclick: 'snoozing' },      { kind: 'SlideLock', caption: 'Dismiss', className: 'dismiss', onUnlock: 'dismissing' }    ],    create: function() {      var self = this;      self.inherited(arguments);      Timekeeping.get(enyo.windowParams.alarm)        .success(function(alarm) {          self.alarm = alarm;          self.$.name.setContent(NameTemplate(alarm));          self.$.text.setContent(TextTemplate(alarm));       })       .failure(function() {         self.alarm = { id: 'unknown', name: 'Unknown alarm', snooze: 10 };       })       .complete(function() {          self.$.name.setContent(NameTemplate(self.alarm));          self.$.text.setContent(TextTemplate(self.alarm));          self.loop = new Loop(sound_path(self.alarm));          self.loop.play();       });    },    snoozing: function() {      var alarm = this.alarm;      Timekeeping.snooze(alarm)        .failure(function(response) {        })        .complete(function() {          new Service('palm://com.palm.applicationManager')            .invoke('open', {'id': 'com.hoopengines.whendle', 'params': {'reason': 'snooze', 'alarm': alarm.id}})            .complete(function() {              window.close();            });        });    },    dismissing: function() {      enyo.windows.addBannerMessage(DismissTemplate(this.alarm), '{}');      window.close();    },    closing: function() {      this.loop.stop();    }  };  function sound_path(alarm) {    if (!has_any_sound(alarm))      return '../sounds/default.mp3';    if (!has_local_sound(alarm))      return alarm.sound;    return '../sounds/' + alarm.sound;  }  function has_any_sound(alarm) {    return alarm && alarm.sound && alarm.sound != ''  }  function has_local_sound(alarm) {    return alarm && alarm.sound && alarm.sound.indexOf('/') < 0;  }  enyo.kind(alarm);})();