Timeout = (function() {  function Helper() {  }  Helper.prototype = {    snooze: function(id, duration) {      return this.set(snooze_params(id, duration));    },    schedule: function(id, date) {      return this.set(schedule_params(id, date));    },    set: function(params) {      var p = new Promise();      if (!params.key) params.key = alarm_key(params.id);      PalmCall.call('palm://com.palm.power/timeout', 'set', params)        .then(function(f) {          var result = f.result;          result.returnValue            ? p.resolve({})            : p.reject(result);        }, exception_handler(p));      return p;    },    clear: function(id) {      var p = new Promise();      PalmCall.call('palm://com.palm.power/timeout', 'clear', { key: alarm_key(id) })        .then(function(f) {          var result = f.result;          result.returnValue            ? p.resolve({})            : p.reject(result);        }, exception_handler(p));      return p;    }  };  function exception_handler(p) {    return function(f) {      var e = f.failure;      var m = typeof(e) == 'string' ? e : e.message;      p.reject({error: true, message: m});    };  }  function alarm_key(id) {    return 'com.hoopengines.whendle.' + id;  }  function snooze_params(id, minutes) {    var duration = '00:' + pad_number(minutes) + ':00';    return {      "key": alarm_key('snooze'),      "uri": "palm://com.palm.applicationManager/open",      "params" : "{'id':'com.hoopengines.whendle', 'params':{'reason':'alarm', 'alarm': '" + id + "'}}",      "wakeup": true,      'in': duration    };  }  function pad_number(n) {    return n < 10 ? '0' + n : n.toString();  }  function schedule_params(id, date) {    return {      "key": alarm_key(id),      "uri": "palm://com.palm.applicationManager/open",      "params" : "{'id':'com.hoopengines.whendle', 'params':{'reason':'alarm', 'alarm': '" + id + "'}}",      "wakeup": true,      "at": date.sys    };  }  return new Helper();})();